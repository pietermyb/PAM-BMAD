workflow:
  id: greenfield-security
  name: Greenfield Secure Application Development
  description: >-
    Agent workflow for building secure full-stack applications from concept to development, integrating security at each stage.
  type: greenfield
  project_types:
    - web-app
    - saas
    - enterprise-app
    - prototype
    - mvp

  sequence:
    - agent: analyst
      creates: project-brief.md
      notes: "Creates project brief. SAVE OUTPUT: Copy final project-brief.md to your project's docs/ folder."

    - agent: pm
      creates: prd.md
      requires: project-brief.md
      notes: "Creates PRD from project brief. SAVE OUTPUT: Copy final prd.md to your project's docs/ folder."

    - agent: architect
      creates: fullstack-architecture.md
      requires: prd.md
      notes: "Creates comprehensive architecture. SAVE OUTPUT: Copy final fullstack-architecture.md to your project's docs/ folder."

    - agent: security
      creates: threat-model.md
      uses: conduct-threat-model
      requires: fullstack-architecture.md
      notes: "Conducts a threat modeling session based on the architecture. SAVE OUTPUT: Copy final threat-model.md to your project's docs/ folder."

    - agent: architect
      updates: fullstack-architecture.md
      requires: threat-model.md
      condition: threat_model_suggests_changes
      notes: "If the threat model suggests changes, update the architecture document and re-export to docs/ folder."

    - agent: po
      validates: all_artifacts
      uses: po-master-checklist
      notes: "Validates all documents for consistency and completeness."

    - agent: various
      updates: any_flagged_documents
      condition: po_checklist_issues
      notes: "If PO finds issues, return to relevant agent to fix and re-export updated documents to docs/ folder."

    - agent: po
      action: shard_documents
      creates: sharded_docs
      requires: all_artifacts_in_project
      notes: "Shard documents for IDE development."

    - agent: sm
      action: create_story
      creates: story.md
      requires: sharded_docs
      repeats: for_each_epic
      notes: "Creates next story from sharded docs."

    - agent: dev
      action: implement_story
      creates: implementation_files
      requires: story.md
      notes: "Implements approved story."

    - agent: security
      action: review_code
      requires: implementation_files
      optional: true
      notes: "OPTIONAL: Security agent reviews code for vulnerabilities."

    - agent: qa
      action: review_implementation
      updates: implementation_files
      requires: implementation_files
      optional: true
      notes: "OPTIONAL: QA Agent reviews implementation."

    - repeat_development_cycle:
      action: continue_for_all_stories
      notes: "Repeat story cycle (SM → Dev → Security/QA) for all epic stories."

    - agent: security
      action: define-pentest-scope
      creates: pentest-scope.md
      condition: project_complete
      notes: "Defines the scope for a penetration test. SAVE OUTPUT: Copy final pentest-scope.md to your project's docs/ folder."

    - workflow_end:
      action: project_complete
      notes: "All stories implemented and reviewed! Project development phase complete."

  flow_diagram: |
    ```mermaid
    graph TD
        A[Start: Greenfield Project] --> B[analyst: project-brief.md]
        B --> C[pm: prd.md]
        C --> E[architect: fullstack-architecture.md]
        E --> F[security: conduct-threat-model]
        F --> G{Threat model suggests changes?}
        G -->|Yes| H[architect: update architecture]
        G -->|No| I[po: validate all artifacts]
        H --> I
        I --> J{PO finds issues?}
        J -->|Yes| K[Return to relevant agent for fixes]
        J -->|No| L[po: shard documents]
        K --> I
        
        L --> M[sm: create story]
        M --> O[dev: implement story]
        O --> P{Security/QA review?}
        P -->|Yes| Q[security/qa: review]
        P -->|No| R{More stories?}
        Q --> S{Issues found?}
        S -->|Yes| T[dev: address feedback]
        S -->|No| R
        T --> Q
        R -->|Yes| M
        R -->|No| U[security: define-pentest-scope]
        U --> W[Project Complete]

        style W fill:#90EE90
        style L fill:#ADD8E6
        style M fill:#ADD8E6
        style O fill:#ADD8E6
        style B fill:#FFE4B5
        style C fill:#FFE4B5
        style E fill:#FFE4B5
        style F fill:#FFC0CB
        style H fill:#FFE4B5
        style Q fill:#F0E68C
        style U fill:#FFC0CB
    ```
